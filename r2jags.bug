model{
        # to avoid crash due to 0 values
        eps<- 0.01
        penm[1] <- 0 # no penalty for first biomass
        Pmean[1] <- log(alpha)
        P[1] ~ dlnorm(Pmean[1],itau2)

        for (t in 2:nyr) {
        Pmean[t] <- ifelse(P[t-1] > 0.25,
        log(max(P[t-1] + r*P[t-1]*(1-P[t-1]) - ct[t-1]/k,eps)),  # Process equation
        log(max(P[t-1] + 4*P[t-1]*r*P[t-1]*(1-P[t-1]) - ct[t-1]/k,eps))) # assuming reduced r at B/k < 0.25
        P[t] ~ dlnorm(Pmean[t],itau2) # Introduce process error
        penm[t]  <- ifelse(P[t]<(eps+0.001),log(k*P[t])-log(k*(eps+0.001)),ifelse(P[t]>1,log(k*P[t])-log(k*(0.99)),0)) # penalty if Pmean is outside viable biomass

        }

        # ><> Biomass priors/penalties are enforced as follows
        for (i in 1:3) {
        penb[i]  <- ifelse(P[b.yrs[i]]<b.prior[1,i],log(k*P[b.yrs[i]])-log(k*b.prior[1,i]),ifelse(P[b.yrs[i]]>b.prior[2,i],log(k*P[b.yrs[i]])-log(k*b.prior[2,i]),0))
        b.prior[3,i] ~ dnorm(penb[i],100)
        }

        for (t in 1:nyr){
        Fpen[t]   <- ifelse(ct[t]>(0.9*k*P[t]),ct[t]-(0.9*k*P[t]),0) #><> Penalty term on F > 1, i.e. ct>B
        pen.F[t]  ~ dnorm(Fpen[t],1000)
        pen.bk[t] ~ dnorm(penm[t],10000)
        Bm[t] <- log(P[t]*k);
        bt[t]    ~ dlnorm(Bm[t],isigma2);
        }

        # priors
        # search in the alpha space from the center of the range. Allow high variability
        log.alpha               <- log((startbio[1]+startbio[2])/2)
        sd.log.alpha            <- (log.alpha-log(startbio[1]))/5
        tau.log.alpha           <- pow(sd.log.alpha,-2)
        alpha                   ~  dlnorm(log.alpha,tau.log.alpha)

        # search in the k space from 20% of the range
        log.km              <- log(start.k[1]+0.2*(start.k[2]-start.k[1]))
        sd.log.k            <- (log.km-log(start.k[1]))/4
        tau.log.k           <- pow(sd.log.k,-2)
        k                   ~  dlnorm(log.km,tau.log.k)

        # define process (tau) and observation (sigma) variances as inversegamma priors
        itau2 ~ dgamma(2,0.01)
        tau2  <- 1/itau2
        tau   <- pow(tau2,0.5)

        isigma2 ~ dgamma(2,0.01)
        sigma2 <- 1/isigma2
        sigma <- pow(sigma2,0.5)

        log.rm              <- mean(log(start.r))
        sigma.log.r         <- abs(log.rm - log(start.r[1]))/2
        tau.log.r           <- pow(sigma.log.r,-2)
        r                   ~  dlnorm(log.rm,tau.log.r)
      }